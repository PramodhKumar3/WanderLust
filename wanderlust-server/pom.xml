<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.4</version>
		<relativePath />
	</parent>

	<groupId>com.infy</groupId>
	<artifactId>WanderLust</artifactId>
	<version>0.0.1-SNAPSHOT</version> <!--development version-->
	<!--    <version>1</version>    &lt;!&ndash; release version &ndash;&gt;-->
	<description>Server Side project for Wanderlust</description>

	<properties>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>


		<!-- project key and name should be same and in the format:
        batchname-groupno-projectname -->
		<sonar.projectKey>WanderLust_1</sonar.projectKey>
		<sonar.projectName>WanderLust_Jul22-SET1-NCS-JAVA-A-Group12</sonar.projectName>
		<sonar.coverage.exclusions>
			src/main/java/com/infy/exception/**,
src/main/java/com/infy/entity/**,
src/main/java/com/infy/dto/**,
src/main/java/com/infy/utility/**,
src/main/java/com/infy/api/**,
src/main/java/com/infy/WanderlustServerSideApplication*,
src/main/java/com/infy/repository/**</sonar.coverage.exclusions>

		<!--The below 2 lines ensures build fails if quality gate status fails-->
		<sonar.qualitygate.wait>true</sonar.qualitygate.wait>
		<sonar.qualitygate.failOnSonarQubeExitCode>true</sonar.qualitygate.failOnSonarQubeExitCode>

		<sonar.sources>${project.basedir}\src\main\java</sonar.sources>
		<sonar.tests>${project.basedir}\src\test\java</sonar.tests>
		<sonar.java.binaries>${project.basedir}\target\classes</sonar.java.binaries>

		<sonar.junit.reportsPath>${project.basedir}\target\surefire-reports</sonar.junit.reportsPath>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.coverage.jacoco.xmlReportPaths>
			${project.basedir}/target/jacoco-ut/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.6.0</version>
		</dependency>

		<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		-->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.32</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>


	<build>
		<finalName>infymovie</finalName>
		<plugins>
			<!-- used to package and run Spring Boot applications-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!--used to execute unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<failIfNoTests>true</failIfNoTests>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>

			<!-- PMD plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.22.0</version>
				<configuration>
					<excludes></excludes>
					<rulesets>
						<ruleset>${project.basedir}/RuleSet.xml</ruleset>
					</rulesets>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Code Coverage Plugin -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<configuration>
					<excludes>
						<exclude>com/infy/api/**</exclude>
						<exclude>com/infy/utility/**</exclude>
						<exclude>com/infy/dto/**</exclude>
						<exclude>com/infy/entity/**</exclude>
						<exclude>com/infy/exception/**</exclude>
						<exclude>com/infy/security/**</exclude>
						<exclude>com/infy/repository/**</exclude>
						<exclude>com/infy/InfyMovieApplication*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>CLASS</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.8</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Sonar plugin -->
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>4.0.0.4121</version>
			</plugin>
		</plugins>
	</build>

	<!-- Deploying to Artifactory -->
	<distributionManagement>
		<repository>
			<id>central</id>
			<name>infyartifactory-artifactory-primary-1-releases</name>
			<url>https://infyartifactory.jfrog.io/artifactory/eta-java-artifacts</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>infyartifactory-artifactory-primary-1-snapshots</name>
			<url>https://infyartifactory.jfrog.io/artifactory/eta-java-artifacts</url>
		</snapshotRepository>
	</distributionManagement>


</project>